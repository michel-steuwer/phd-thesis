%% Standards, Programming Models / Languages, ...
%%manual
%%Technical documentation.
%%Required fields: title
%%Optional fields: author, organization, address, edition, month, year, note, key

@manual{OpenCL,
  title = {The OpenCL Specification},
  author = {Aaftab Munshi},
  organization = {Khronos OpenCL Working Group},
  note = {Version 1.2, Document Revision 19},
  month = {November},
  year = {2012}
}

@book{Cole1991,
 author = {Murray Cole},
 title = {Algorithmic Skeletons: Structured Management of Parallel Computation},
 year = {1991},
 isbn = {0-262-53086-4},
 publisher = {MIT Press},
 address = {Cambridge, MA, USA},
} 

@incollection{GorlatchCo2011,
  author = {Sergei Gorlatch and Murray Cole},
  title = {Parallel Skeletons},
  booktitle = {Encyclopedia of Parallel Computing},
  publisher = {Springer},
  year = {2011},
  editor = {David Padua},
  pages = {1417-1422},
}

@incollection{Blelloch1991,
  author = {Guy E. Blelloch},
  title = {Prefix Sums and Their Applications},
  booktitle = {Synthesis of Parallel Algorithms},
  publisher = {Morgan Kaufmann},
  year = {1991},
  editor = {John H. Reif},
  pages = {35-60},
}

@incollection{HarrisSeOw2007,
  author = {Marks Harris and Shubhabrata Sengupta and John D. Owens},
  title = {Parallel Prefix Sum (Scan) with CUDA},
  booktitle = {GPU Gems 3},
  publisher = {Addison Wesley},
  year = {2007},
  editor = {Hubert Nguyen},
  pages = {??},
}

@article{Dongarra2002,
  author    = {Jack Dongarra},
  title     = {Basic Linear Algebra Subprograms Technical (Blast) Forum
               Standard (1)},
  journal   = {International Journal of High Performance Computing Applications},
  volume    = {16},
  number    = {1},
  year      = {2002},
  pages     = {1-111},
}

@article{Dongarra2002a,
  author    = {Jack Dongarra},
  title     = {Basic Linear Algebra Subprograms Technical (Blast) Forum
               Standard (2)},
  journal   = {International Journal of High Performance Computing Applications},
  volume    = {16},
  number    = {2},
  year      = {2002},
  pages     = {115-199},
}

@book{McCoolRoRe2012,
  author = {Michael McCool and Arch D. Robinson and James Reinders},
  title = {Structured Parallel Programming},
  year = {2012},
  isbn = {978-0-12-415993-8},
  publisher = {Morgan Kaufmann},
}


%% This BibTeX bibliography file was created using BibDesk.
%% http://bibdesk.sourceforge.net/


%% Created for Michel Steuwer at 2013-05-26 15:02:20 +0200 


%% Saved with string encoding Unicode (UTF-8) 



@incollection{KegSteGor13,
	Author = {Philipp Kegel and Michel Steuwer and Sergei Gorlatch},
	Booktitle = {HPC to Exascale},
	Date-Added = {2013-05-26 12:58:00 +0000},
	Date-Modified = {2013-05-26 12:59:24 +0000},
	Editor = {Erik D'Hollander and Jack Dongarra and Ian Foster and Lucio Grandinetti and Gerhard Joubert},
	Publisher = {IOS Press},
	Title = {Uniform High-Level Programming of Many-Core and Multi-GPU Systems},
	Year = {2013}}

@incollection{KesGorEmm11,
	Author = {Christoph Kessler and Sergei Gorlatch and Johan Emmyren and Usman Dastgeer and Michel Steuwer and Philipp Kegel},
	Booktitle = {Programming Multi-core and Many-core Computing Systems},
	Date-Added = {2013-05-26 12:54:12 +0000},
	Date-Modified = {2013-05-26 12:57:50 +0000},
	Editor = {Sabri Pllana and Fatos Xhafa},
	Isbn = {978-0470936900},
	Publisher = {Wiley-Blackwell},
	Series = {Wiley Series on Parallel and Distributed Computing},
	Title = {Skeleton Programming for Portable Many-Core Computing},
	Volume = {86},
	Year = {2011}}

@inproceedings{SteGor13a,
	Author = {Michel Steuwer and Sergei Gorlatch},
	Booktitle = {Parallel Computing Technologies - 12 International Conference (PaCT 2013)},
	Date-Added = {2013-05-26 12:52:50 +0000},
	Date-Modified = {2013-05-26 12:54:09 +0000},
	Institution = {University of M{\"u}nster},
	Title = {SkelCL: Enhancing OpenCL for High-Level Programming of Multi-GPU Systems},
	Year = {2013}}

@article{SteGor13,
	Author = {Michel Steuwer and Sergei Gorlatch},
	Date-Added = {2013-05-26 12:49:34 +0000},
	Date-Modified = {2013-05-26 12:50:43 +0000},
	Institution = {University of M{\"u}nster},
	Journal = {Procedia Computer Science},
	Title = {High-Level Programming for Medical Imaging on Multi-GPU Systems using the SkelCL Library},
	Year = {2013}}

@article{SteFriAlb13,
	Author = {Michel Steuwer and Malte Friese and Sebastian Albers and Sergei Gorlatch},
	Date-Added = {2013-05-26 12:44:27 +0000},
	Date-Modified = {2013-05-26 12:49:15 +0000},
	Institution = {University of M{\"u}nster},
	Journal = {International Journal of Parallel Programming},
	Title = {Introducing and Implementing the Allpairs Skeleton for Programming Multi-GPU Systems},
	Year = {2013}}

@inproceedings{SteGorBus12,
	Author = {Michel Steuwer and Sergei Gorlatch and Matthias Bu{\ss} and Stefan Breuer},
	Booktitle = {Euro-Par 2012: Parallel Processing Workshops - BDMC, CGWS, HeteroPar, HiBB, OMHI, Paraphrase, PROPER, Resilience, UCHPC, VHPC},
	Date-Added = {2013-05-26 12:39:31 +0000},
	Date-Modified = {2013-05-26 12:49:26 +0000},
	Doi = {10.1007/978-3-642-36949-0_41},
	Editor = {Ioannis Caragiannis and Michael Alexander and Rosa M. Badia and Mario Cannataro and Alexandru Costan and Marco Danelutto and Fr{\'e}d{\'e}ric Desprez and Bettina Krammer and Julio Sahuquillo and Stephen L. Scott and Josef Weidendorfer},
	Institution = {University of M{\"u}nster},
	Isbn = {978-3-642-36948-3},
	Location = {Rhodes Island, Greence},
	Month = {aug},
	Pages = {370--380},
	Publisher = {Springer},
	Series = {Lecture Notes in Computer Science},
	Title = {Using the SkelCL Library for High-Level GPU Programming of 2D Applications},
	Volume = {7640},
	Year = {2012},
	Abstract = {Application programming for GPUs (Graphics Processing Units) is complex and error-prone, because the popular approaches --- CUDA and OpenCL --- are intrinsically low-level and offer no special support for systems consisting of multiple GPUs. The SkelCL library offers pre-implemented recurring computation and communication patterns (skeletons) which greatly simplify programming for single- and multi-GPU systems. In this paper, we focus on applications that work on two-dimensional data. We extend SkelCL by the matrix data type and the MapOverlap skeleton which specifies computations that depend on neighboring elements in a matrix. The abstract data types and a high-level data (re)distribution mechanism of SkelCL shield the programmer from the low-level data transfers between the system's main memory and multiple GPUs. We demonstrate how the extended SkelCL is used to implement real-world image processing applications on two-dimensional data. We show that both from a productivity and a performance point of view it is beneficial to use the high-level abstractions of SkelCL.}}

@inproceedings{SteKegGor12a,
	Author = {Michel Steuwer and Philipp Kegel and Sergei Gorlatch},
	Booktitle = {New Trends in Software Methodologies, Tools and Techniques New Trends in Software Methodologies, Tools and Techniques - Proceedings of the Eleventh SoMeT '12},
	Date-Added = {2013-05-26 12:34:12 +0000},
	Date-Modified = {2013-05-26 12:38:08 +0000},
	Doi = {10.3233/978-1-61499-125-0-430},
	Editor = {Hamido Fujita and Roberto Revetria},
	Institution = {University of M{\"u}nster},
	Isbn = {978-1-61499-124-3},
	Location = {Genoa, Italy},
	Month = {sep},
	Pages = {430--441},
	Publisher = {IOS Press},
	Series = {Frontiers in Artificial Intelligence and Applications},
	Title = {A High-Level Programming Approach for Distributed Systems with Accelerators},
	Volume = {246},
	Year = {2012}}

@inproceedings{KegSteGor12,
	Author = {Philipp Kegel and Michel Steuwer and Sergei Gorlatch},
	Booktitle = {2012 26th IEEE International Symposium on Parallel and Distributed Processing Workshops and Phd Forum (IPDPSW)},
	Date-Added = {2013-05-26 12:30:41 +0000},
	Date-Modified = {2013-05-26 12:39:06 +0000},
	Doi = {10.1109/IPDPSW.2012.16},
	Institution = {University of M{\"u}nster},
	Isbn = {978-1-4673-0974-5},
	Location = {Shanghai, China},
	Month = {may},
	Pages = {174--186},
	Publisher = {IEEE},
	Title = {dOpenCL: Towards a Uniform Aproach for Distributed Heterogeneous Multi-/Many-Core Systems},
	Year = {2012},
	Abstract = {Modern computer systems are becoming increasingly heterogeneous by comprising multi-core CPUs, GPUs, and other accelerators. Current programming approaches for such systems usually require the application developer to use a combination of several programming models (e.g., MPI with OpenCL or CUDA) in order to exploit the full compute capability of a system. In this paper, we presentd OpenCL (Distributed OpenCL) - a uniform approach to programming distributed heterogeneous systems with accelerators. d OpenCL extends the OpenCL standard, such that arbitrary computing devices installed on any node of a distributed system can be used together within a single application. OpenCL allows moving data and program code to these devices in a transparent, portable manner. Sinced OpenCL is designed as a fully-fledged implementation of the OpenCL API, it allows running existing OpenCL applications in a heterogeneous distributed environment without any modifications. We describe in detail the mechanisms that are required to implement OpenCL for distributed systems, including a device management mechanism for running multiple applications concurrently. Using three application studies, we compare the performance of dOpenCL with MPI+OpenCL and a standard OpenCL implementation.}}

@inproceedings{SteKegGor12,
	Author = {Michel Steuwer and Philipp Kegel and Sergei Gorlatch},
	Booktitle = {2012 26th IEEE International Symposium on Parallel and Distributed Processing Workshops and Phd Forum (IPDPSW)},
	Date-Added = {2013-05-26 12:27:22 +0000},
	Date-Modified = {2013-05-26 12:39:15 +0000},
	Doi = {10.1109/IPDPSW.2012.229},
	Institution = {University of M{\"u}nster},
	Isbn = {978-1-4673-0974-5},
	Location = {Shanghai, China},
	Month = {may},
	Pages = {1858--1865},
	Publisher = {IEEE},
	Title = {Towards High-Level Programming of Multi-GPU Systems Using the SkelCL Library},
	Year = {2012},
	Abstract = {Application programming for GPUs (Graphics Processing Units) is complex and error-prone, because the popular approaches - CUDA and OpenCL - are intrinsically low-level and offer no special support for systems consisting of multiple GPUs. The SkelCL library presented in this paper is built on top of the OpenCL standard and offers pre-implemented recurring computation and communication patterns (skeletons) which greatly simplify programming for multi-GPU systems. The library also provides an abstract vector data type and a high-level data (re)distribution mechanism to shield the programmer from the low-level data transfers between the system's main memory and multiple GPUs. In this paper, we focus on the specific support in SkelCL for systems with multiple GPUs and use a real-world application study from the area of medical imaging to demonstrate the reduced programming effort and competitive performance of SkelCL as compared to OpenCL and CUDA. Besides, we illustrate how SkelCL adapts to large-scale, distributed heterogeneous systems in order to simplify their programming.}}

@inproceedings{SteKegGor11,
	Author = {Michel Steuwer and Philipp Kegel and Sergei Gorlatch},
	Booktitle = {2011 IEEE International Symposium on Parallel and Distributed Processing Workshops and Phd Forum (IPDPSW)},
	Date-Added = {2013-05-26 12:01:59 +0000},
	Date-Modified = {2013-05-26 12:29:31 +0000},
	Doi = {10.1109/IPDPS.2011.269},
	Institution = {University of M{\"u}nster},
	Isbn = {978-1-61284-425-1},
	Location = {Anchorage, AK, USA},
	Month = {may},
	Pages = {1176--1182},
	Publisher = {IEEE},
	Title = {SkelCL - A Portable Skeleton Library for High-Level GPU Programming},
	Year = {2011},
	Abstract = {While CUDA and OpenCL made general-purpose programming for Graphics Processing Units (GPU) popular, using these programming approaches remains complex and error-prone because they lack high-level abstractions. The especially challenging systems with multiple GPU are not addressed at all by these low-level programming models. We propose SkelCL -- a library providing so-called algorithmic skeletons that capture recurring patterns of parallel computation and communication, together with an abstract vector data type and constructs for specifying data distribution. We demonstrate that SkelCL greatly simplifies programming GPU systems. We report the competitive performance results of SkelCL using both a simple Mandelbrot set computation and an industrial-strength medical imaging application. Because the library is implemented using OpenCL, it is portable across GPU hardware of different vendors.}}

@techreport{SteKegGor10,
	Author = {Michel Steuwer and Philipp Kegel and Sergei Gorlatch},
	Date-Added = {2013-05-26 11:59:33 +0000},
	Date-Modified = {2013-05-26 12:33:35 +0000},
	Institution = {University of M{\"u}nster},
	Month = {dec},
	Title = {SkelCL - A Portable Multi-GPU Skeleton Library},
	Year = {2010}}
